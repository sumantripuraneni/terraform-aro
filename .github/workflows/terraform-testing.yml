on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      OCP_PULL_SECRET: ${{ secrets.OCP_PULL_SECRET }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      TF_VERSION: 1.6.3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

             
      - name: Create OCP pull secret 
        run: python -c "import os; file = open('pull_secret.json', 'w'); file.write(os.environ['OCP_PULL_SECRET']); file.close()"
        shell: bash

      - name: Create ssh key  
        run: python -c "import os; file = open('~/.ssh/id_rsa', 'w'); file.write(os.environ['SSH_PRIVATE_KEY']); file.close()"
        shell: bash
        
      - name: Check env 
        id: list_files 
        run: |
              pwd
              ls -lart

      - name: Terraform init 
        id: init
        run: terraform init

      - name: Terraform plan
        id: plan
        run: |
             terraform plan -var "pull_secret_path=pull_secret.json" \
             -var "subscription_id=$ARM_SUBSCRIPTION_ID" \
             -var "cluster_name=test-aro" -no-color

      - name: Terraform apply
        id: apply
        run: terraform apply -var "pull_secret_path=pull_secret.json" \
             -var "subscription_id=$ARM_SUBSCRIPTION_ID" \
             -var "cluster_name=test-aro" -auto-approve              
      
